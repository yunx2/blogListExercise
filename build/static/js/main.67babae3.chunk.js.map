{"version":3,"sources":["reducers/notificationReducer.js","services/blogs.js","reducers/blogsReducer.js","services/login.js","reducers/loggedInUserReducer.js","services/users.js","reducers/usersReducer.js","store.js","components/Blog.js","components/BlogList.js","components/Notification.js","components/AddForm.js","components/Togglable.js","components/LoginForm.js","components/UsersList.js","components/User.js","components/CommentsList.js","components/CommentForm.js","components/BlogView.js","components/NavigationMenu.js","App.js","index.js"],"names":["setNotification","message","type","data","notificationReducer","state","action","baseUrl","token","setToken","newToken","getAll","a","axios","get","response","create","dataObject","config","headers","Authorization","post","console","log","update","blog","put","id","deleteBlog","delete","addNewComment","JSON","stringify","comments","blogsReducer","newBlog","concat","updatedBlog","map","current","filter","login","credentials","authenticateUser","userCredentials","dispatch","then","userInfo","window","localStorage","setItem","name","setTimeout","catch","err","loggedInUserReducer","getUsers","userReducer","rootReducer","combineReducers","notification","blogs","loggedInUser","users","usersReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","subscribe","getState","Blog","useSelector","find","key","to","title","author","BlogList","Table","striped","Notification","includes","Alert","variant","AddForm","useState","setTitle","setAuthor","url","setUrl","useDispatch","Form","onSubmit","e","preventDefault","blogData","createNewBlog","exception","Group","Label","Control","onChange","target","value","Button","Togglable","buttonLabel","children","toggleChild","setToggle","hideChild","display","showChild","toggle","style","className","onClick","LoginForm","username","setUsername","password","setPassword","handleLogin","UsersList","useEffect","borderless","size","user","length","User","userId","useParams","CommentsList","comment","i","CommentForm","setComment","addComment","as","rows","BlogView","blogId","likes","updated","likeBlog","NavigationMenu","handleLogout","Navbar","bg","expand","Brand","Collapse","Nav","Link","inline","App","loggedUserJSON","getItem","parse","setFromLocalStorage","clear","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.67babae3.chunk.js","sourcesContent":["const notificationReducer = (state = '', action) => {\n  switch (action.type) {\n  case 'SET':\n    return action.data\n  default:\n    return state\n  }\n}\n\nexport const setNotification = message => {\n  return {\n    type: 'SET',\n    data: message\n  }\n}\n\nexport const clearNotification = () => {\n  return {\n    type: 'CLEAR',\n    data: ''\n  }\n}\nexport default notificationReducer","\nimport axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nexport const setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nexport const getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nexport const getById = async id => {\n  const response = await axios.get(`${baseUrl}/${id}`)\n  return response.data\n}\n\nexport const create = async dataObject => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  const response = await axios.post(baseUrl, dataObject, config)\n  console.log('response data:', response.data)\n  return response.data\n}\n\nexport const update = async blog => {\n  const response = await axios.put(`${baseUrl}/${blog.id}`, blog)\n  console.log('responseData:', response.data)\n  return response.data\n}\n\nexport const deleteBlog = async id => {\n  await axios.delete(`${baseUrl}/${id}`)\n}\n\nexport const addNewComment = async blog => {\n  const response = await axios.post(`${baseUrl}/${blog.id}/comments`, blog);\n  console.log('updated comments:', JSON.stringify(response.data.comments));\n  return response.data;\n}","import { getAll, create, update, deleteBlog, addNewComment } from '../services/blogs'\n\nconst blogsReducer = (state = [], action) => {\n  switch (action.type) {\n  case 'GET_ALL':\n    return action.data\n  case 'CREATE': {\n    const newBlog = action.data\n    return state.concat(newBlog)\n  }\n  case 'EDIT': {\n    const updatedBlog = action.data\n    return state.map(current => {\n      if (current.id === updatedBlog.id) {\n        return updatedBlog\n      }\n      return current\n    })\n  }\n  case 'DELETE': {\n    const id = action.data\n    return state.filter(blog => blog.id !== id)\n  }\n  default:\n    return state\n  }\n}\n\nexport const getAllBlogs = () => {\n  return async (dispatch) => {  // dispatch is the redux dispatch function; NOT react-redux useDispatch hook\n    const blogs = await getAll()\n    dispatch({\n      type: 'GET_ALL',\n      data: blogs\n    })\n  }\n}\n\nexport const createNewBlog = blogData => {\n  return async (dispatch) => {\n    const newBlog = await create(blogData)\n    dispatch({\n      type: 'CREATE',\n      data: newBlog\n    })\n  }\n}\n\nexport const likeBlog = (blog) => {\n  return async (dispatch) => {\n    const updated = await update(blog)\n    console.log('response:', updated)\n    dispatch({\n      type: 'EDIT',\n      data: updated\n    })\n  }\n}\n\nexport const deleteById = id => {\n  return async (dispatch) => {\n    await deleteBlog(id)\n    dispatch({\n      type: 'DELETE',\n      data: id\n    })\n  }\n}\n\nexport const addComment = blog => {\n  return async dispatch => {\n    const response = await addNewComment(blog);\n    dispatch({\n      type: 'EDIT',\n      data: response\n    });\n  }\n}\n\nexport default blogsReducer","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nexport const login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\n","import { useDispatch } from 'react-redux';\n\nimport { login } from '../services/login'\nimport { setToken } from '../services/blogs';\nimport { setNotification } from './notificationReducer'\n\nconst loggedInUserReducer = (state = null, action) => {\n  switch (action.type) {\n  case 'LOGIN_SUCCESS':\n    return action.data\n  case 'LOGIN_FAIL':\n    return null\n  case 'CLEAR':\n    return null\n  default:\n    return state\n  }\n}\n\n// export const checkUserCredentials = userCredentials => {\n//   return async (dispatch) => {\n//     const userInfo = await login(userCredentials)\n//     window.localStorage.setItem(\n//       'loggedInUser', JSON.stringify(userInfo)\n//     )\n//     setToken(userInfo.token)\n//     dispatch({\n//       type: 'SET_USER',\n//       data: userInfo\n//     })\n//   }\n// }\n\nexport const authenticateUser = userCredentials => {\n  return async dispatch => {\n    login(userCredentials)\n      .then(userInfo => {\n        window.localStorage.setItem(\n          'loggedInUser', JSON.stringify(userInfo)\n        );\n        setToken(userInfo.token);\n        dispatch({\n          type: 'LOGIN_SUCCESS',\n          data: userInfo\n        })\n        dispatch(setNotification('welcome ' + userInfo.name))\n        setTimeout(() => {\n          dispatch(setNotification(''))\n        }, 3000)\n      })\n      .catch(err => {\n        dispatch({\n          type: 'LOGIN_FAIL',\n        })\n        dispatch(setNotification('wrong credentials'));\n        setTimeout(() => {\n          dispatch(setNotification(''))\n        }, 3000)\n      })\n  }\n}\n\nexport const setFromLocalStorage = userCredentials  => {\n  return {\n    type: 'LOGIN_SUCCESS',\n    data: userCredentials\n  }\n}\n\nexport const logout = () => {\n  return {\n    type: 'CLEAR'\n  }\n}\n\nexport default loggedInUserReducer","import axios from 'axios'\n\nconst baseUrl = '/api/users'\n\nexport const getUsers = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}","import { getUsers } from '../services/users'\n\nconst userReducer = (state = [], action) => {\n  switch (action.type) {\n  case 'GET_USERS':\n    return action.data\n  default:\n    return state\n  }\n}\n\nexport const getAllUsers = () => {\n  return async (dispatch) => {\n    const users = await getUsers()\n    // console.log('users: ', users)\n    dispatch({\n      type: 'GET_USERS',\n      data: users\n    })\n  }\n}\n\nexport default userReducer","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport notificationReducer from './reducers/notificationReducer'\nimport blogsReducer from './reducers/blogsReducer'\nimport loggedInUserReducer from './reducers/loggedInUserReducer'\nimport usersReducer from './reducers/usersReducer'\n\nconst rootReducer = combineReducers({\n  notification: notificationReducer,\n  blogs: blogsReducer,\n  loggedInUser: loggedInUserReducer,\n  users: usersReducer\n})\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n)\n\nstore.subscribe(() => console.log('store loggedInUser:', store.getState().loggedInUser))\n\nexport default store","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Blog = ({ id }) => {\r\n  const blog = useSelector( state  => {\r\n    return state.blogs.find(blog => blog.id === id)\r\n  })\r\n  // console.log('blog:', blog)\r\n\r\n  return (\r\n    <tr key={id}>\r\n      <td>\r\n        <Link to={`/blogs/${blog.id}`}>\r\n          {blog.title}\r\n        </Link>\r\n      </td>\r\n      <td>\r\n      by: {blog.author}\r\n      </td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nexport default Blog\r\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { Table } from 'react-bootstrap';\nimport Blog from './Blog'\n\nconst BlogList = () => {\n  const blogs = useSelector(state => state.blogs)\n  return (\n    <div>\n      <h2>favorites</h2>\n      <Table striped>\n        <tbody>\n          {blogs.map((blog) => <Blog key={blog.id} id={blog.id}  />)}\n        </tbody>\n      </Table>\n    </div>\n  )\n}\n\nexport default BlogList","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Alert } from 'react-bootstrap';\n\nconst Notification = () => {\n  const message = useSelector(state => state.notification)\n  // console.log(message)\n  if (message) {\n    if (message.includes('welcome')) {\n      return (\n        <Alert variant=\"success\">\n          {message}\n        </Alert>\n      )\n    }\n    if (message.includes('wrong')) {\n      return(\n        <Alert variant=\"danger\">\n          {message}\n        </Alert>\n      )\n    }\n  }\n  return null\n}\n\nexport default Notification","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Form, Button } from 'react-bootstrap';\n\nimport { setNotification } from '../reducers/notificationReducer'\nimport { createNewBlog } from '../reducers/blogsReducer'\n\nconst AddForm = () => {\n  const [title, setTitle] = useState('')\n  const [author, setAuthor] = useState('')\n  const [url, setUrl] = useState('')\n\n  const dispatch = useDispatch()\n\n  const handleAdd = e => {\n    e.preventDefault()\n    const blogData = {\n      title,\n      author,\n      url\n    }\n    try {\n      dispatch(createNewBlog(blogData))\n      dispatch(setNotification(`added ${title} to favorites`))\n      setTimeout(() => {\n        // dispatch(clearNotification())\n        dispatch(setNotification(''))\n      } , 5000)\n      setTitle('')\n      setAuthor('')\n      setUrl('')\n    } catch (exception) {\n      dispatch(setNotification(`could not add ${JSON.stringify(blogData)}`))\n      setTimeout(() => {\n        dispatch(setNotification(''))\n      }, 5000)\n    }\n  }\n  return (\n    <div>\n      <h2>add new favorite blog</h2>\n      <Form onSubmit={handleAdd}>\n        <Form.Group>\n          <Form.Label>title</Form.Label>\n          <Form.Control type=\"text\" onChange={({ target }) => setTitle(target.value)} />\n          <Form.Label>author</Form.Label>\n          <Form.Control type=\"text\" onChange={({ target }) => setAuthor(target.value)} />\n          <Form.Label>url</Form.Label>\n          <Form.Control id=\"url\" type=\"text\" onChange={({ target }) => setUrl(target.value)} />\n          <Button variant=\"primary\" type=\"submit\">add this blog</Button>\n        </Form.Group>\n      </Form>\n    </div>\n  )\n}\n\nexport default AddForm","import React, { useState } from 'react'\nimport { Button } from 'react-bootstrap';\nimport PropTypes from 'prop-types'\n\nconst Togglable = ({ buttonLabel, children }) => {\n  const [toggleChild, setToggle] = useState(false)\n  const hideChild = { display: toggleChild ? 'none' : '' } // if toggle = true, set attribute display=\"none\" (element not displayed)\n  const showChild = { display: toggleChild ? '' : 'none' } // if toggle = true, set attribute display=\"\" (element displayed)\n  const toggle = () => {\n    setToggle(!toggleChild)\n  }\n  return (\n    <div>\n      <div style={hideChild} className=\"togglableContent\">\n        <Button className=\"buttonLabel\" onClick={toggle}>{buttonLabel}</Button>\n      </div>\n      <div style={showChild} className=\"hidden\">\n        {children}\n        <Button onClick={toggle}>cancel</Button>\n      </div>\n    </div>\n  )\n}\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n}\n\nexport default Togglable","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { Form, Button } from 'react-bootstrap';\n\nimport { authenticateUser } from '../reducers/loggedInUserReducer'\nimport { setNotification } from '../reducers/notificationReducer'\n\nconst LoginForm = () => {\n  const dispatch = useDispatch()\n  const  [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const handleLogin = async e => { // needs to dispatch action to LoginReducer\n    e.preventDefault()\n    const credentials = {\n      username,\n      password\n    }\n    dispatch(authenticateUser(credentials))\n    // dispatch(setNotification('welcome ' + username))\n    // setTimeout(() => {\n    //   dispatch(setNotification(''))\n    // }, 3000)\n  }\n\n  return (\n    <div>\n      <Form onSubmit={handleLogin}>\n        <h1>blogs</h1>\n        <Form.Label>username</Form.Label>\n        <Form.Group>\n          <Form.Control\n            type=\"text\"\n            value={username}\n            name=\"Username\"\n            onChange={({ target }) => setUsername(target.value)} />\n          <Form.Label>password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            value={password}\n            name=\"Password\"\n            onChange={({ target }) => setPassword(target.value)} />\n          <Button variant=\"primary\" type=\"submit\">login</Button>\n        </Form.Group>\n      </Form>\n    </div>\n  )\n}\n\nexport default LoginForm","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Table } from 'react-bootstrap';\nimport { getAllUsers } from '../reducers/usersReducer'\n\nconst UsersList = () => {\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(getAllUsers())\n  }, [dispatch])\n\n  const users = useSelector(state => state.users)\n  // console.log('all users:', users)\n  return (\n    <div>\n      <h2>users</h2>\n      <Table borderless=\"true\" size=\"sm\">\n        <tbody>\n          <tr>\n            <td></td>\n            <th>blogs added</th>\n          </tr>\n          {users.map(user => {\n            return (\n              <tr key={user.id}>\n                <td><Link to={`/users/${user.id}`}>{user.username}</Link></td>\n                <td>{user.blogs.length}</td>\n              </tr>\n            )\n          })}\n        </tbody>\n      </Table>\n    </div>\n  )\n}\n\nexport default UsersList","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { useParams } from 'react-router-dom'\n\nconst User = () => {\n  const userId = useParams().id\n  const user = useSelector(state => state.users.find(user => user.id === userId))\n  // console.log('user:', user)\n\n  if (user) {\n    return (\n      <div>\n        <h2>{user.name}</h2>\n        <h3>favorite blogs</h3>\n        <ul>\n          {user.blogs.map(blog => (\n            <li key={blog.id}>{blog.title}</li>\n          ))}\n        </ul>\n      </div>\n    )\n  }\n  return null\n}\n\nexport default User","import React from 'react'\n\nconst CommentsList = ({ comments }) => {\n  // const comments = ['awesomearticle', 'this is the best', 'i love this blog']\n  return (\n    <div>\n      <h2>comments</h2>\n      <ul>\n        {comments.map((comment, i) => <li key={i} >{comment}</li>\n        )}\n      </ul>\n    </div>\n  )\n}\n\nexport default CommentsList","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Form, Button } from 'react-bootstrap';\n\nimport { addComment } from '../reducers/blogsReducer';\n\nconst CommentForm = ({ blog }) => {\n  // call useDispatch hook here at top level of component instead of inside handleSubmit where the action is dispatched because hooks cannot be called inside nested functions (or inside loops, or conditions)\n  const dispatch = useDispatch();\n\n  // local state\n  const [comment, setComment] = useState('');\n\n  // onClick handler\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const updatedBlog = {\n      ...blog,\n      comments: blog.comments.concat(comment)\n    }\n\n    try {\n      dispatch(addComment(updatedBlog));\n      console.log('comment successfully added')\n    } catch (exception) {\n      console.log('not working');\n    }\n  }\n  return (\n    <div>\n      <Form onSubmit={handleSubmit}>\n        <h2>add a comment</h2>\n        <Form.Control as=\"textarea\" rows={3} onChange={e => setComment(e.target.value)} />\n        <Button variant=\"primary\" type=\"submit\">submit comment</Button>\n      </Form>\n    </div>\n  )\n}\n\nexport default CommentForm;\n","import React from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Button, Form } from 'react-bootstrap';\n\nimport { likeBlog, deleteById } from '../reducers/blogsReducer'\nimport CommentsList from './CommentsList'\nimport CommentForm from './CommentForm';\nimport Togglable from './Togglable';\n\nconst BlogView = () => {\n  const dispatch = useDispatch()\n  const blogId = useParams().id\n  const blog = useSelector(state => state.blogs.find(blog => blog.id === blogId))\n  console.log('blog: ', blog)\n  const handleLike = () => {\n    const dataObject = {\n      ...blog,\n      likes: blog.likes + 1\n    }\n    dispatch(likeBlog(dataObject))\n  }\n\n  if (blog) {\n    // console.log('number of comments', blog.comments.length)\n    const commentForm = () => (\n      <Togglable buttonLabel=\"add comment\">\n        <CommentForm blog={blog} />\n      </Togglable>\n    )\n    return (\n      <div>\n        <h2>{blog.title}</h2>\n        <Form>\n          <Button variant=\"primary\" onClick={() => dispatch(deleteById(blog.id))}>\n          delete\n          </Button>\n          <div>url: {blog.url}</div>\n          <Form.Group>\n            likes: {blog.likes}\n            <Button variant=\"primary\" type=\"button\" onClick={handleLike}>like</Button>\n          </Form.Group>\n        </Form>\n        added by {blog.user.name}\n        {commentForm()}\n        <CommentsList comments={blog.comments} />\n      </div>\n    )\n  }\n  return null\n}\n\nexport default BlogView","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport { Navbar, Nav, Button, Form } from 'react-bootstrap';\n\nconst NavigationMenu = ({ handleLogout, user }) => {\n  // const padding = { padding: 5 }\n  // const listStyle = { listStyle: 'none', margin: 0, padding: 0 }\n  // const itemStyle = { display: 'inline' }\n  if (!user) {\n    return null\n  }\n  return (\n    <Navbar bg=\"light\" expand=\"lg\">\n      <Navbar.Brand>Favorite Blogs</Navbar.Brand>\n      <Navbar.Collapse>\n        <Nav className=\"mr-auto\">\n          <Nav.Link><Link to=\"/\">home</Link></Nav.Link>\n          <Nav.Link><Link to=\"/users\">users</Link></Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n      <Form inline>\n        <Button variant=\"primary\" onClick={handleLogout}>logout</Button>\n      </Form>\n    </Navbar>\n  )\n}\n\nexport default NavigationMenu","import React, { useEffect } from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport BlogList from './components/BlogList'\nimport Notification from './components/Notification'\nimport AddForm from './components/AddForm'\nimport Togglable from './components/Togglable'\nimport LoginForm from './components/LoginForm'\nimport UsersList from './components/UsersList'\nimport User from './components/User'\nimport BlogView from './components/BlogView'\nimport NavigationMenu from './components/NavigationMenu'\n\nimport { setToken } from './services/blogs'\nimport { getAllBlogs } from './reducers/blogsReducer'\nimport { logout, setFromLocalStorage } from './reducers/loggedInUserReducer'\nimport { useDispatch, useSelector } from 'react-redux'\n\nconst App = () => {\n  const user = useSelector(state => state.loggedInUser)\n  const dispatch = useDispatch() // useDispatch is a React hook from react-redux library\n\n  useEffect(() => {\n    dispatch(getAllBlogs()) // App component dispatches async action creator function, api call to server made in action creator, after which action is dispatched using redux dispatch function\n  }, [dispatch])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedInUser')\n    // console.log('loggedUserJSON:', loggedUserJSON )\n    if (loggedUserJSON) {\n      const userCredentials = JSON.parse(loggedUserJSON)\n      console.log('parsed: ', userCredentials)\n      dispatch(setFromLocalStorage(userCredentials))\n      setToken(userCredentials.token)\n    }\n  }, [dispatch])\n\n  const addForm = () => (\n    <Togglable buttonLabel=\"add blog\" >\n      <AddForm />\n    </Togglable>\n  )\n\n  const handleLogout = () => {\n    window.localStorage.clear()\n    dispatch(logout())\n  }\n\n  return (\n    <div className=\"container\">\n      <BrowserRouter>\n        <Notification />\n        <NavigationMenu handleLogout={handleLogout} user={user} />\n        <Switch>\n          <Route path=\"/blogs/:id\">\n            <BlogView />\n          </Route>\n          <Route path=\"/users/:id\">\n            <User />\n          </Route>\n          <Route path=\"/users\">\n            <UsersList />\n          </Route>\n          <Route path=\"/\">\n            {user === null ? <LoginForm /> :\n              (<div id=\"content\">\n                {addForm()}\n                <BlogList />\n              </div>)\n            }\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\n// import 'bootstrap/dist/css/bootstrap.min.css'\nimport store from './store'\nimport App from './App'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root'))"],"sourceRoot":""}